#+TITLE:     EGO's README
#+AUTHOR:    Feng Shu, Kuangdash
#+EMAIL:     emacs-china@googlegroups.com
#+DATE:      2015-07-02

* Introduction

EGO is a static site generator that depends on [[http://www.gnu.org/software/emacs][Emacs]], [[git-scm.com][Git]] and  [[http://orgmode.org/][Org-mode]]. it originates from Feng Shu's [[https://github.com/tumashu/org-webpage][org-webpage]], which is a fork of Kelvin H's [[https://github.com/kelvinh/org-page][org-page]].

EGO provides features below:

1) Org sources and html files managed by git
2) Incremental publication (according to =git diff= command)
3) Category support (not recommended)
4) Tags support (auto generated)
5) RSS support (auto generated)
6) Search engine support (auto generated)
7) A beautiful theme
8) Theme customization support is well (using mustache template)
9) Commenting (implemented using disqus/duoshuo)
10) Website traffic analytics (implemented using google analytics)
11) Index/about page support (auto generated if no default is provided)
13) Include a tiny emacs web server, which can be used to test publish.
14) Manage multi-site configs in an emacs session easily.

* Workflow

1. Specify a git repo where the org source
   files will be on the "source" branch and the generated html files
   will be on the "master" branch (the branch names can be
   customized). Repos may be created manually or by
   EGO's =ego/new-repository= command.
2. Specify a "base commit" (the most recent prior commit will be used if
   omitted). EGO will read changes between the latest commit
   and the specified base commit on branch "source". The changes
   will then be marked for publication.
3. EGO does preparation jobs.
4. Publish the changes read in step 2. A change can be an addition,
   a modification, or a deletion.  *EGO is designed to handle all of these kinds of changes but since deletion does not happen often, EGO has not implemented it yet.*
5. Update the index page for each category and tag.
6. Publication finished.

* Usage

*Here is a general introduction about how to use EGO, for more detailed introduction and configuration, please see
"tips.org" in the "documents" folder.*

** Installation

EGO is temporarily not available from the famous emacs package repo [[http://melpa.milkbox.net/][melpa]]. so the recommended way is to clone this git repository. For more info about installation, please see *tips.org* in the "document" folder.

** Configuration
The follow code is [[http://emacs-china.github.io][emacs-china]] 's config , you can adjust and paste it to your =.emacs= file:

#+BEGIN_SRC emacs-lisp
  ;; the following is only needed if you install org-page manually
  (add-to-list 'load-path "path/to/EGO")

  (require 'ego)

  (add-to-list 'ego/project-config-alist
                 `("emacs-china"
                   :repository-directory "~/github/emacs-china.github.io"
                   :site-domain "http://emacs-china.github.io/"
                   :site-main-title "EMACS-CHINA"
                   :site-sub-title "=============>集思广益"
                   :theme (default)
                   :summary (("years" :year :updates 10) ("authors" :authors) ("tags" :tags))
                   :source-browse-url ("Github" "https://github.com/emacs-china")
                   :personal-disqus-shortname "emacs-china"
                   :personal-duoshuo-shortname "emacs-china"
                   :confound-email nil
                   :web-server-docroot "~/webRoot/emacs-china.github.io"
                   :web-server-port 5432))
#+END_SRC

You can find more config options and theirs default values by commands:

#+BEGIN_EXAMPLE
C-h v ego/project-config-alist
C-h v ego/config-fallback
#+END_EXAMPLE

** create new post
Using the following command to create a new post: 

#+BEGIN_EXAMPLE
M-x ego/new-post
#+END_EXAMPLE

** Publication
The simplest way is run:

#+BEGIN_EXAMPLE
M-x ego/do-publication
#+END_EXAMPLE

This command will ask you some questions:

1. Which project do you want to publish?
2. Publish all org files of "XXXXX" project?
3. Publish to:  [Yes] Web server docroot, [No] Original repo.
4. Auto commit to repo?
5. Auto push to remote repo?

You can use `ego/do-publication' in elisp, which let you code
your own quickly publication command:

#+BEGIN_SRC emacs-lisp
(ego/do-publication "project-name" nil "HEAD^1" "~/org-pub/" nil)
#+END_SRC

or:

#+BEGIN_SRC emacs-lisp
(call-interactively 'ego/do-publication)
#+END_SRC

* Dependencies

1. [[http://www.gnu.org/software/emacs/][emacs]]: this is an "of-course" dependency
2. [[http://orgmode.org/][org mode]]: v8.0 is required, please use =M-x org-version <RET>= to make sure you org mode version is not less than 8.0
3. [[http://git-scm.com][git]]: a free and open source version control system
4. [[https://github.com/Wilfred/mustache.el][mustache.el]]: a mustache templating library for Emacs
5. [[http://fly.srk.fer.hr/~hniksic/emacs/htmlize.el.cgi][htmlize.el]]: a library for syntax highlighting (usually this library is shipped with emacs)
6. [[https://github.com/magnars/dash.el][dash.el]]: a modern list library for Emacs
7. [[https://github.com/Wilfred/ht.el][ht.el]]: a modern hash-table library for Emacs
8. [[https://github.com/eschulte/emacs-web-server][web-server]]: a web server library for Emacs

* Known issues

- Currently the deletion change handler has not been implemented so
  if you deleted some org sources, you may have to manually delete
  corresponding generated html files.
- URI path change detection is not available. That is, if you make a
  post with the URI "/blog/2013/03/25/the-old-post-name" and then
  change this value in your org source, org-webpage would be unable to
  detect that this has happened. it will only publish a new html
  file for you so you need to delete the old html file related to
  the old URI manually.

* Roadmap [0/3]
- [ ] Next/Previous Page links

  Use =M-x org-insert-link= to choose previous .org file, and add a Next file links in the chosen .org file, which directs to the current .org file. 

  Then export these *bi-directional file links* as hyperlinks in html.
 
  May this be accomplished by =org-add-link-type=.
- [ ] More themes
- [ ] upload to melpa
